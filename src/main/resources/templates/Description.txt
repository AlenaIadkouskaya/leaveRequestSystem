Aplikacja do zarządzania urlopami
Aplikacja umożliwia pracownikowi złożenie wniosku urlopowego, sprawdzenie pozostałych dni urlopu na wskazaną datę oraz uzyskanie informacji o statusie swojego wniosku urlopowego, w razie otrzymania decyzji na wniosek dostaje powiadomienie na adres e-mail.

Statusy wniosków:
•  Utworzony
Zgłoszenie zostało złożone przez pracownika, ale nie zostało jeszcze rozpatrzone ani przez kierownika, ani przez dział HR.
•  Oczekuje na decyzję kierownika
Zgłoszenie jest w trakcie rozpatrywania przez kierownika. W tym statusie kierownik może zatwierdzić lub odrzucić zgłoszenie.
•  Zatwierdzony przez kierownika, oczekuje na HR
Kierownik zaakceptował zgłoszenie, które zostało przekazane do działu HR do dalszego rozpatrzenia. W tym statusie HR może sprawdzić pozostałe dni urlopu i inne warunki.
•  Odrzucony przez kierownika
Zgłoszenie zostało odrzucone przez kierownika. Pracownik otrzymuje powiadomienie o przyczynie odmowy.
•  Odrzucony przez HR
Zgłoszenie zostało odrzucone przez dział HR. Pracownik również otrzymuje powiadomienie z podaniem przyczyny odmowy.
•  Zatwierdzony przez HR
Zgłoszenie zostało pomyślnie zatwierdzone przez dział HR i uznaje się za ostatecznie potwierdzone. Pracownik otrzymuje powiadomienie, że jego urlop został zatwierdzony.
•  Anulowany
Pracownik samodzielnie anulował swoje zgłoszenie na urlop. Ta informacja powinna być zarejestrowana w systemie.
Nowy wniosek jest rozpatrzywany najpierw przez kierownika.
Pracownik działu HR otrzymuje powiadomienie o nowym wniosku, po przetworzeniu którego pracownik otrzymuje informacje o podjętej decyzji. Dział HR może wprowadzać pozostałe dni urlopu.
Pozostałe dni urlopu obliczane są automatycznie dla wszystkich pracowników co miesiąc na podstawie informacji o przepracowanych dniach w miesiącu wprowadzonych przez księgowego. Księgowy otrzymuje powiadomienie o pozytywnej decyzji wniosku w celu wprowadzenia do ewidencji czasu pracy oraz naliczenia urlopowego.
Dostępne raporty w aplikacji:
1.	Dla Księgowego:
a. Raport za okres dla pracowników/pracownika z informacją o dacie rozpoczęcia i zakończenia.
2.	Dla HR, kierownika:
a. Raport dotyczący wniosków z możliwością filtrowania według statusu, okresu, pracownika.
3.	Dla Pracownika:
a. Raport dotyczący pozostałych dni urlopu na wskazaną datę.
b. Raport dotyczący swoich wniosków z możliwością filtrowania według statusu i okresu.
Role:
1.	Kierownik
a. Zatwierdzanie, odrzucanie wniosku.
b.	Generowanie dostępnych raportów.
2.	Pracownik HR (użytkownik odpowiedzialny za przetwarzanie wniosków urlopowych pracowników)
a. Zatwierdzanie, odrzucanie wniosku.
b. Wprowadzanie pozostałych dni urlopu.
c. Generowanie dostępnych raportów.
3.	Pracownik (użytkownik, który może składać wnioski urlopowe i śledzić ich status)
a. Dodawanie, modyfikowanie, anulowanie wniosku.
b. Generowanie dostępnych raportów.
4.	Księgowy
a. Dodawanie danych o przepracowanym czasie.
b. Generowanie dostępnych raportów.

Struktura bazy danych:
1. Tabela users (Użytkownicy)
Pole	Typ	Opis
user_id	SERIAL PRIMARY KEY	Unikalny identyfikator użytkownika
username	VARCHAR(50)	Nazwa użytkownika
password_hash	VARCHAR(255)	Hash hasła użytkownika
role_id	INT	Identyfikator roli (odniesienie do tabeli roles)
created_at	TIMESTAMP DEFAULT CURRENT_TIMESTAMP	Data utworzenia rekordu
updated_at	TIMESTAMP DEFAULT CURRENT_TIMESTAMP	Data ostatniej aktualizacji rekordu
2. Tabela roles (Role użytkowników)
Pole	Typ	Opis
role_id	SERIAL PRIMARY KEY	Unikalny identyfikator roli
name	VARCHAR(50)	Nazwa roli (np. „Administrator”)
description	TEXT	Opis roli
3. Tabela employees (Pracownicy)
Pole	Typ	Opis
employee_id	SERIAL PRIMARY KEY	Unikalny identyfikator pracownika
last_name	VARCHAR(50)	Nazwisko pracownika
first_name	VARCHAR(50)	Imię pracownika
email	VARCHAR(100)	Adres e-mail
4. Tabela requests (Wnioski)
Pole	Typ	Opis
id	SERIAL PRIMARY KEY	Unikalny identyfikator wniosku
employee_id	INT	Identyfikator pracownika (odniesienie do tabeli employees)
status_id	INT	Enam request_statuses: 
•	Utworzony
•	W_rozpatrywaniu
•	Dodany_komentarz
•	Odrzucony
•	Zatwierdzony
•	Do usunięcia
start_date	TIMESTAMP DEFAULT CURRENT_TIMESTAMP	Data początku urlopu
end_date	TIMESTAMP DEFAULT CURRENT_TIMESTAMP	Data zakończenia urlopu
6. Tabela vacation_balances (Salda urlopów)
Pole	Typ	Opis
id	SERIAL PRIMARY KEY	Unikalny identyfikator rekordu
employee_id	INT	Identyfikator pracownika (odniesienie do tabeli employees)
year	INT	Rok, za który uwzględniane są dni urlopu
total_days	INT	Łączna liczba dni urlopu na rok
used_days	INT	Wykorzystane dni urlopu
remaining_days	INT	Pozostałe dni urlopu
7. Tabela time_records (Zapisy czasu pracy)
Pole	Typ	Opis
id	SERIAL PRIMARY KEY	Unikalny identyfikator rekordu
employee_id	INT	Identyfikator pracownika (odniesienie do tabeli employees)
work_date	DATE	Data dnia pracy
is_worked	BOOLEAN	Wskaźnik: przepracowane (tak/nie)
Powiązania między tabelami
•	Tabela users jest powiązana z roles przez pole role_id.
•	Tabela requests jest powiązana z employees przez pole employee_id 
•	Tabela vacation_balances jest powiązana z employees przez pole employee_id.
•	Tabela time_records jest powiązana z employees przez pole employee_id.
Endpoints według ról:
1. Kierownik
Endpoint	Metoda	Opis
/api/manager/leaverequests	GET	Uzyskaj listę wszystkich wniosków urlopowych.
/api/manager/leaverequests/{id}	GET	Uzyskaj informacje o konkretnym wniosku.
/api/manager/leaverequests/{id}/approve	POST	Zatwierdź wniosek urlopowy. TRANZAKCJA
/api/manager/leaverequests/{id}/reject	POST	Odrzuć wniosek urlopowy. TRANZAKCJA
/api/manager/reports	GET	Uzyskaj raporty dotyczące wniosków (z możliwością filtrowania).
/api/manager/users	POST	Dodaj nowego użytkownika z rolą Manager
/api/manager/users/{id}	PUT	Zmień informacje o swoim użytkowniku.
2. Specjalista HR
Endpoint	Metoda	Opis
/api/hr/leaverequests	GET	Uzyskaj listę wszystkich wniosków urlopowych.
/api/hr/leaverequests/{id}	GET	Uzyskaj informacje o konkretnym wniosku.
/api/hr/leaverequests/{id}/approve	POST	Zatwierdź wniosek urlopowy. TRANZAKCJA
/api/hr/leaverequests/{id}/reject	POST	Odrzuć wniosek urlopowy. TRANZAKCJA
/api/hr/vacation-balances	POST	Wprowadź pozostałe dni urlopu dla pracowników.
/api/hr/reports	GET	Uzyskaj raporty dotyczące wniosków (z możliwością filtrowania).
/api/hr/users	POST	Dodaj nowego użytkownika z rolą HR
/api/hr/users/{id}	PUT	Zmień informacje o swoim użytkowniku.
3. Pracownik
Endpoint	Metoda	Opis
/api/employees/me/leaverequests	GET	Uzyskaj listę swoich wniosków urlopowych.
/api/employees/me/leaverequests	POST	Utwórz nowy wniosek urlopowy.
/api/employees/me/leaverequests/{id}	PUT	Zmień swój wniosek urlopowy.
/api/employees/me/leaverequests/{id}	DELETE	Anuluj swój wniosek urlopowy.
/api/employees/me/vacation-balance	GET	Sprawdź pozostałe dni urlopu na wskazaną datę.
/api/employees/me/reports	GET	Uzyskaj raport o swoich wnioskach z możliwością filtrowania.
/api/employees/users	POST	Dodaj nowego użytkownika z rolą User
/api/employees/users/{id}	PUT	Zmień informacje o swoim użytkowniku.
4. Księgowy
Endpoint	Metoda	Opis
/api/accountant/time-records	GET	Uzyskaj listę wszystkich zapisów dotyczących przepracowanego czasu.
/api/accountant/time-records	POST	Dodaj nowy zapis dotyczący przepracowanego czasu.
/api/accountant/time-records/{id}	PUT	Zmień zapis dotyczący przepracowanego czasu.
/api/accountant/time-records/{id}	DELETE	Usuń zapis dotyczący przepracowanego czasu.
/api/accountant/reports	GET	Uzyskaj raporty dotyczące przepracowanego czasu i urlopów.

/api/ accountant /users	POST	Dodaj nowego użytkownika z rolą Accounter
/api/ accountant /users/{id}	PUT	Zmień informacje o swoim użytkowniku.

Przykłady transakcji:
•  HR - Przetwarzanie wniosku urlopowego
•	/api/hr/leaverequests/{id}/approve (POST): Jeśli wniosek jest zatwierdzany, można również zmienić statusy związane z tym wnioskiem i powiadomić odpowiednich użytkowników.
•	/api/hr/leaverequests/{id}/reject (POST): Podobnie, jeśli wniosek jest odrzucany, należy upewnić się, że wszystkie powiązane rekordy są aktualizowane.
Główne kroki realizacji wzorca "Inbox":
Po złożeniu wniosku w tle zmienia się status wniosku zgodnie z jego procesowaniem. Użytkownik może sprawdzić status swojego wniosku za pomocą endpointu:

